# MaxScale documentation on GitHub:
# https://github.com/mariadb-corporation/MaxScale/blob/master/Documentation/Documentation-Contents.md

# Global parameters
#
# Complete list of configuration options:
# https://github.com/mariadb-corporation/MaxScale/blob/master/Documentation/Getting-Started/Configuration-Guide.md

# [maxscale]
# threads=1
# log_info=1
# log_debug=1

# Server definitions
#
# Set the address of the server to the network
# address of a MySQL server.
#

# [server1]
# type=server
# address=192.168.57.51
# port=3306
# protocol=MySQLBackend
# 
# [server2]
# type=server
# address=192.168.57.52
# port=3306
# protocol=MySQLBackend
# 
# [server3]
# type=server
# address=192.168.57.53
# port=3306
# protocol=MySQLBackend

# Monitor for the servers
#
# This will keep MaxScale aware of the state of the servers.
# MySQL Monitor documentation:
# https://github.com/mariadb-corporation/MaxScale/blob/master/Documentation/Monitors/MySQL-Monitor.md

[Replication monitor]
type=monitor
# It should be mysqlmon, but it actually doesn't work as needed in case when
# there are 2 node in a mysql cluster. If there is one master and one slave,
# then after master fail the slave will be still a slave. But we need it is
# switched as a new master. So we use multi-master monitor, it switches the
# single slave as a new master. But there is a point in mmmon: when new mysql
# server become available it treats it as a master, so we explicitly switching
# it to a slave in process_maxscale_events.sh script.
module=mmmon
# module=mysqlmon
servers=MYSQL_SERVERS
user=MYSQL_USER
passwd=MYSQL_PASSWORD
monitor_interval=1000
backend_connect_timeout=4
script=/opt/bin/process_maxscale_events.sh --event $EVENT --initiator $INITIATOR --nodelist $NODELIST --masterlist $MASTERLIST
events=master_down,server_up,master_up
detect_stale_master=true
# detect_replication_lag=true
# multimaster=true
# failover=true

# Service definitions
#
# Service Definition for a read-only service and
# a read/write splitting service.
#

# ReadConnRoute documentation:
# https://github.com/mariadb-corporation/MaxScale/blob/master/Documentation/Routers/ReadConnRoute.md

# [Read-Only Service]
# type=service
# router=readconnroute
# servers=server1
# user=myuser
# passwd=mypwd
# router_options=slave

# ReadWriteSplit documentation:
# https://github.com/mariadb-corporation/MaxScale/blob/master/Documentation/Routers/ReadWriteSplit.md

[Read-Write Service]
type=service
router=readwritesplit
servers=MYSQL_SERVERS
user=MYSQL_USER
passwd=MYSQL_PASSWORD
max_slave_connections=100%
router_options=master_accept_reads=true
enable_root_user=1
max_slave_replication_lag=30

# This service enables the use of the MaxAdmin interface
# MaxScale administration guide:
# https://github.com/mariadb-corporation/MaxScale/blob/master/Documentation/Reference/MaxAdmin.md

[MaxAdmin Service]
type=service
router=cli

# Listener definitions for the services
#
# These listeners represent the ports the
# services will listen on.
#

# [Read-Only Listener]
# type=listener
# service=Read-Only Service
# protocol=MySQLClient
# port=4008

[Read-Write Listener]
type=listener
service=Read-Write Service
protocol=MySQLClient
port=3306

[MaxAdmin Listener]
type=listener
service=MaxAdmin Service
protocol=maxscaled
socket=default
